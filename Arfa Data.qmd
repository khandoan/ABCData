---
title: "Descriptive Statistics, Correlation, and Visualization"
author: "Arfa Ghias"
output: html
editor: visual
---

## A. Descriptive Statistics

```{r}
# Load necessary libraries
library(ggplot2)

# Load the data (replace 'path/to/frutasysemilla.csv' with the correct path or GitHub URL)
data <- read.csv("DATA/frutasysemillas.csv")

# Descriptive Statistics for Nseeds
nseeds_mean <- mean(data$Nseeds, na.rm = TRUE)
nseeds_se <- sd(data$Nseeds, na.rm = TRUE) / sqrt(sum(!is.na(data$Nseeds)))

# Descriptive Statistics for FrDiam
frdiam_mean <- mean(data$FrDiam, na.rm = TRUE)
frdiam_se <- sd(data$FrDiam, na.rm = TRUE) / sqrt(sum(!is.na(data$FrDiam)))

# Print results
cat("Nseeds: Mean =", nseeds_mean, ", SE =", nseeds_se, "\n")
cat("FrDiam: Mean =", frdiam_mean, ", SE =", frdiam_se, "\n")
```

### Explanation:

-   **Mean**: We calculate the mean for `Nseeds` (Seed Count) and `FrDiam` (Fruit Diameter).

-   **Standard Error (SE)**: The standard error is computed by dividing the standard deviation by the square root of the sample size. This helps estimate the precision of the mean.

### Frequency Distribution and Density Curve for `Nseeds`

Next, we visualize the frequency distribution and density curve for the `Nseeds` variable to understand its distribution.

```{r}
# Frequency Distribution and Density Curve for Nseeds
ggplot(data, aes(x = Nseeds)) +
  geom_histogram(aes(y = ..density..), binwidth = 1, fill = "skyblue", color = "black", alpha = 0.7) +
  geom_density(color = "red", size = 1) +
  ggtitle("Frequency Distribution and Density Curve: Nseeds") +
  xlab("Nseeds") +
  ylab("Density") +
  theme_minimal()
```

### Explanation:

-   **Histogram**: The histogram represents the frequency distribution of `Nseeds`, with the density curve overlaid to show the estimated probability density of the data.

-   **Density Curve**: The red curve provides a smoothed representation of the distribution of `Nseeds`.

## Frequency Distribution and Density Curve for `FrDiam`

In this section, we created a similar plot for the `FrDiam` (Fruit Diameter) variable.

```{r}
# Frequency Distribution and Density Curve for FrDiam
ggplot(data, aes(x = FrDiam)) +
  geom_histogram(aes(y = ..density..), binwidth = 2, fill = "lightgreen", color = "black", alpha = 0.7) +
  geom_density(color = "red", size = 1) +
  ggtitle("Frequency Distribution and Density Curve: FrDiam") +
  xlab("FrDiam") +
  ylab("Density") +
  theme_minimal()
```

### Explanation:

-   **Histogram**: This histogram represents the distribution of the `FrDiam` variable, with density plotted over it.

-   **Density Curve**: The density curve helps to visualize the smooth shape of the distribution for `FrDiam`.

## C. Correlation and Regression Analysis

Here, we explored the relationship between `Nseeds` and `FrDiam` using correlation and regression analysis.

### Correlation Analysis

```{r}
# Correlation Analysis between Nseeds and FrDiam
correlation <- cor(data$FrDiam, data$Nseeds, use = "complete.obs", method = "pearson")
cat("Correlation between Fruit Diameter and Seed Count:", correlation, "\n")
```

-   **Correlation**: We compute the Pearson correlation between `Nseeds` and `FrDiam`, which measures the strength and direction of the linear relationship between the two variables.

### Scatterplot with Linear Fit

```{r}
# Scatterplot with Linear Fit
ggplot(data, aes(x = FrDiam, y = Nseeds)) +
  geom_point(color = "blue", alpha = 0.6) +
  geom_smooth(method = "lm", color = "red", se = TRUE) +
  labs(title = "Scatterplot with Linear Fit: Seed Count vs Fruit Diameter",
       x = "Fruit Diameter",
       y = "Seed Count") +
  theme_minimal()
```

### Explanation:

-   **Scatterplot**: The scatterplot shows the relationship between `FrDiam` (Fruit Diameter) and `Nseeds` (Seed Count).

-   **Linear Fit**: The red line represents a linear regression model fit to the data, indicating the trend between the two variables.

### Linear Regression Model

```{r}
# Linear Regression Model
lm_model <- lm(Nseeds ~ FrDiam, data = data)
summary(lm_model)
```

### Explanation:

-   **Linear Regression**: We fit a linear regression model to predict `Nseeds` based on `FrDiam`. The model summary provides details like the coefficients, R-squared value, and p-value.

### Diagnostic Plots for Regression

```{r}
# Plot diagnostic plots for regression model
par(mfrow = c(2, 2))  # Set plotting area
plot(lm_model)
```

### Explanation:

-   **Diagnostic Plots**: These plots are checked the assumptions of the linear regression model, such as homoscedasticity (constant variance), normality of residuals, and linearity.

## E. Visualization Techniques

In this section, we visualize the seed counts by treatment using various types of plots.

### Box Plot by Treatment

```{r}
# Load necessary libraries
library(ggplot2)

# Ensure Treatment is a factor and ordered correctly
data$Treatment <- factor(data$Treatment, levels = c("A", "B", "C", "D", "E"))

# Define colors for each treatment
treatment_colors <- c("A" = "#1f77b4",  # Blue for Negative Control
                      "B" = "#ff7f0e",  # Orange for Variable 1
                      "C" = "#2ca02c",  # Green for Variable 2
                      "D" = "#d62728",  # Red for Variable 3
                      "E" = "#9467bd")  # Purple for Positive Control

# Create the box plot
ggplot(data, aes(x = Treatment, y = Nseeds, fill = Treatment)) +
  geom_boxplot() +  # Draw box plots
  scale_fill_manual(values = treatment_colors) +  # Assign colors
  labs(title = "Box Plot of Seed Counts by Treatment",
       x = "Treatment",
       y = "Seed Count") +
  theme_minimal()
```

### Explanation:

-   **Box Plot**: The box plot visualizes the distribution of `Nseeds` for each treatment, showing the median, quartiles, and outliers. Each treatment is colored differently for clarity.

### Bar Chart with Error Bars

```{r}
# Load necessary libraries
library(dplyr)

# Calculate means and confidence intervals
summary_data <- data %>%
  group_by(Treatment) %>%
  summarise(Mean = mean(Nseeds, na.rm = TRUE),
            SE = sd(Nseeds, na.rm = TRUE) / sqrt(n()),
            Lower = Mean - qt(1 - 0.05 / 2, n() - 1) * SE,
            Upper = Mean + qt(1 - 0.05 / 2, n() - 1) * SE)

# View the summary data
print(summary_data)
```

### Explanation:

-   **Summary Statistics**: We calculate the mean and standard error (SE) for `Nseeds` by treatment, along with the confidence intervals (Lower and Upper).

-   **Error Bars**: These represent the uncertainty around the mean seed count for each treatment.

    ```{r}
    # Bar Chart with Error Bars
    ggplot(summary_data, aes(x = Treatment, y = Mean, fill = Treatment)) +
      geom_bar(stat = "identity", color = "black", alpha = 0.8) +
      geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.2) +
      labs(title = "Mean Seed Count per Treatment with Confidence Intervals",
           x = "Treatment",
           y = "Mean Seed Count") +
      theme_minimal()
    ```

### Explanation:

-   **Bar Chart**: The bar chart displays the mean seed count for each treatment with error bars representing the 95% confidence interval.

### Scatterplot of Seed Count vs Fruit Diameter

```{r}
# Scatterplot
ggplot(data, aes(x = FrDiam, y = Nseeds)) +
  geom_point(color = "blue", alpha = 0.6) +
  geom_smooth(method = "lm", color = "red", se = FALSE) +
  labs(title = "Scatterplot of Seed Count vs Fruit Diameter",
       x = "Fruit Diameter",
       y = "Seed Count") +
  theme_minimal()
```

### Explanation:

-   **Scatterplot**: This scatterplot shows the relationship between `FrDiam` and `Nseeds`, with a red linear regression line.

### Violin Plot of Seed Counts by Treatment

```{r}
# Violin Plot
ggplot(data, aes(x = Treatment, y = Nseeds, fill = Treatment)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.1, fill = "white", outlier.color = "red") +
  labs(title = "Violin Plot of Seed Counts by Treatment",
       x = "Treatment",
       y = "Seed Count") +
  theme_minimal()
```

### Explanation:

-   **Violin Plot**: The violin plot visualizes the distribution of `Nseeds` for each treatment, showing the kernel density estimate along with a box plot inside the violin to represent summary statistics.
